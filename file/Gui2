import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.NotSerializableException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

public class Menu extends JFrame implements ActionListener{

	    private JPanel panel;
	    private JLabel label;
	    private JButton button1, button2, button3, button4, button5, button6, button7,button8;
	    private Student student;
	
	    Menu(Student student) {
	        this.student = student;
	        this.setTitle("MENU");
	        this.setSize(550, 600);
	        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
	        this.setResizable(false);
	        this.setLocationRelativeTo(null);
	
	        panel = new JPanel(new GridBagLayout());
	        panel.setBackground(new Color(201, 193, 231));
	        this.add(panel);
	
	        label = new JLabel("ZGJIDHNI NJE OPSION");
	        label.setFont(new Font("Serif", Font.BOLD, 20));
	
	        GridBagConstraints gbc = new GridBagConstraints();
	        gbc.gridx = 0;
	        gbc.gridy = 0;
	        gbc.insets = new Insets(20, 0, 20, 0);
	        panel.add(label, gbc);
	
	        button1 = createStyledButton("REGISTER IN A COURSE");
	        button2 = createStyledButton("UNREGISTER FROM A COURSE");
	        button3 = createStyledButton("LEAVE A FEEDBACK");
	        button4 = createStyledButton("VIEW COURSE FEEDBACKS");
	        button5 = createStyledButton("TOP MOST RATED COURSES");
	        button6 = createStyledButton("VIEW COURSES IN A CALENFAR");
	        button7 = createStyledButton("VIEW COURSE DETAILS");
                button8 = createStyledButton("LOG OUT");
	
	        Dimension buttonSize = new Dimension(400, 50); 
	
	        gbc.gridy = 1;
	        gbc.insets = new Insets(10, 0, 10, 0); 
	        addButton(button1, gbc, buttonSize);
	        addButton(button2, gbc, buttonSize);
	        addButton(button3, gbc, buttonSize);
	        addButton(button4, gbc, buttonSize);
	        addButton(button5, gbc, buttonSize);
	        addButton(button6, gbc, buttonSize);
	        addButton(button7, gbc, buttonSize);
                addButton(button8, gbc, buttonSize);
	
	        panel.setSize(550, 600);
	        this.setVisible(true);
	    }
	
	    private void addButton(JButton button, GridBagConstraints gbc, Dimension size) {
	        gbc.gridy++;
	        button.setPreferredSize(size);
	        panel.add(button, gbc);
	        button.addActionListener(this);
	    }
	
	    private JButton createStyledButton(String text) {
	        JButton button = new JButton(text);
	        button.setFont(new Font("Arial", Font.BOLD, 14));
	        button.setBackground(new Color(130, 130, 190));
	        button.setForeground(Color.white);
	        button.setFocusPainted(false);
	        button.setBorderPainted(false);
	        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
	
	        // Shtimi i hover effect per butonat
	        button.addMouseListener(new java.awt.event.MouseAdapter() {
	            public void mouseEntered(java.awt.event.MouseEvent evt) {
	                button.setBackground(new Color(160, 160, 210));
	            }
	
	            public void mouseExited(java.awt.event.MouseEvent evt) {
	                button.setBackground(new Color(130, 130, 190));
	            }
	        });

        return button;
    }
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if(e.getSource()==button1) {
		new JoinCourse(student);
		}
		if(e.getSource()==button2) {
			new DropCourse(student);
		}
		if(e.getSource()==button3) {
			new LeaveFeedback(student);
		}
		if(e.getSource()==button4) {
			new ViewFeedback();
		}
		if(e.getSource()==button5) {
			new top8();
		}
		if(e.getSource()==button6) {
			new CourseCalendar();
		}
		
		if(e.getSource()==button7) {
			new CourseDetails();
		}
		if(e.getSource()==button8) {
			new Login();
			this.dispose();
		}
	}
}
